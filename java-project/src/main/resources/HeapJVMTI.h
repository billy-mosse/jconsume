/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ar_uba_dc_tools_instrumentation_resource_tracker_runtime_HeapJVMTI */

#ifndef _Included_ar_uba_dc_tools_instrumentation_resource_tracker_runtime_HeapJVMTI
#define _Included_ar_uba_dc_tools_instrumentation_resource_tracker_runtime_HeapJVMTI
#ifdef __cplusplus
extern "C" {
#endif

void  stdout_message(const char * format, ...);
void  fatal_error(const char * format, ...);
void  check_jvmti_error(jvmtiEnv *jvmti, jvmtiError errnum, const char *str);
void  deallocate(jvmtiEnv *jvmti, void *ptr);
void *allocate(jvmtiEnv *jvmti, jint len);




/*
 * Class:     ar_uba_dc_tools_instrumentation_resource_tracker_runtime_HeapJVMTI
 * Method:    setTag
 * Signature: (Ljava/lang/Object;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_ar_uba_dc_tools_instrumentation_resource_tracker_runtime_HeapJVMTI_setTag
  (JNIEnv *, jobject, jobject, jlong, jint);

  
/*
 * Class:     ar_uba_dc_tools_instrumentation_resource_tracker_runtime_HeapJVMTI
 * Method:    countTagged
 * Signature: (J[J)I
 */
JNIEXPORT jint JNICALL Java_ar_uba_dc_tools_instrumentation_resource_tracker_runtime_HeapJVMTI_countReachable
  (JNIEnv *, jobject, jlong, jlong);
  
#ifdef __cplusplus
}
#endif
#endif
