<!-- Attention ce fichier est en UTF-8 -->


<AnalysisBoundary>
  <DefaultPolicy policy="SEPARATE" />;
  <!-- methods policy -->


  <!-- hypotheses specifiques pour le Flight Manager, mais qui
  devraient convenir de toutes facons pour le classpath -->
  <!-- GS-29/08/2006-11:03 -->
  <MethodAnalysisPolicy signature="&lt;java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)&gt;" policy="SEPARATE" />  
  <MethodAnalysisPolicy signature="&lt;java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)&gt;" policy="SEPARATE" />  
  <MethodAnalysisPolicy signature="&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;" policy="JOIN_PARAMETERS" />  
  <MethodAnalysisPolicy signature="&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;"  policy="JOIN_PARAMETERS" />  


  <!-- décodeur mp3 -->
  <!-- GS-02/04/2007-14:07 un accès à  un tableau static final, qui me
  contamine   tout   le   monde   avec   du   SyntheticSootClass   -->
  <MethodAnalysisPolicy signature="&lt;javazoom.jl.decoder.Header: int frequency()&gt;" policy="JOIN_PARAMETERS" />

  <!-- TSP (Jolden) -->
  <!-- GS-10/05/2006-11:15 -->
  <!-- une methode trop grosse. prend 12s a analyser, alors je triche -->
  <MethodAnalysisPolicy signature="&lt;Tree: Tree merge(Tree,Tree)&gt;" policy="JOIN_PARAMETERS" />

  <!-- Voronoi (JOlden) -->
  <!-- certaines parties du classpath sont analysees trop de fois -->
  <!-- GS-10/05/2006-16:53 -->
  <MethodAnalysisPolicy signature="&lt;java.lang.FloatingDecimal: void dtoa(int,long,int)&gt;" policy="SEPARATE" />
  <MethodAnalysisPolicy signature="&lt;java.util.AbstractSet: boolean removeAll(java.util.Collection)&gt;" policy="JOIN_PARAMETERS" />
  <MethodAnalysisPolicy signature="&lt;java.util.AbstractCollection: boolean removeAllInternal(java.util.Collection)&gt;" policy="JOIN_PARAMETERS" />
  <MethodAnalysisPolicy signature="&lt;java.util.Hashtable$Entry: java.lang.String toString()&gt;" policy="SEPARATE" />
  <MethodAnalysisPolicy signature="&lt;Edge: void outputVoronoiDiagram()&gt;"  policy="SEPARATE" />
  <MethodAnalysisPolicy signature="&lt;java.lang.Integer: int parseInt(java.lang.String,int)&gt;"  policy="SEPARATE" />
  <MethodAnalysisPolicy signature="&lt;java.lang.FloatingDecimal: java.lang.FDBigInt big5pow(int)&gt;"  policy="SEPARATE" />
  <MethodAnalysisPolicy signature="&lt;java.util.Hashtable: java.lang.Object remove(java.lang.Object)&gt;"  policy="JOIN_PARAMETERS" />
  <MethodAnalysisPolicy signature="&lt;java.lang.Long: long parseJLong(java.lang.String,int)&gt;"  policy="SEPARATE" />
  <Methodanalysispolicy signature="&lt;java.util.Collections$1SynchronizedMapEntry: java.lang.Object getKey()&gt;" policy="JOIN_PARAMETERS" />
  <Methodanalysispolicy signature="&lt;java.lang.FloatingDecimal: java.lang.FloatingDecimal readJavaFormatString(java.lang.String)&gt;"  policy="SEPARATE" />
  <Methodanalysispolicy signature="&lt;java.util.Hashtable: void rehash()&gt;"  policy="SEPARATE" />

  <!-- standard library -->  
  <MethodAnalysisPolicy signature="&lt;java.lang.Object: int hashCode()&gt;" policy="SEPARATE" />
  <MethodAnalysisPolicy signature="&lt;java.util.Collections$EmptyMap: java.util.Set entrySet()&gt;" policy="SEPARATE" />
  <MethodAnalysisPolicy signature="&lt;java.util.Collections$EmptyMap: java.util.Set keySet()&gt;" policy="SEPARATE" />
  <MethodAnalysisPolicy signature="&lt;java.util.Collections$EmptyMap: java.util.Collection values()&gt;" policy="SEPARATE" />
  <MethodAnalysisPolicy signature="&lt;java.util.Collections$EmptySet: java.util.Iterator iterator()&gt;" policy="SEPARATE" />
  <MethodAnalysisPolicy signature="&lt;java.util.Collections$SingletonList: java.util.List subList(int,int)&gt;" policy="SEPARATE" />
  <MethodAnalysisPolicy signature="&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)&gt;" policy="JOIN_PARAMETERS" />
  <MethodAnalysisPolicy signature="&lt;xxx&gt;" policy="SEPARATE" />
  <MethodAnalysisPolicy signature="&lt;yyy&gt;" policy="JOIN_PARAMETERS" />
  <MethodAnalysisPolicy signature="&lt;zzz&gt;" policy="JOIN_WITH_CLASS" />
  <MethodAnalysisPolicy signature="&lt;ttt&gt;" policy="ANALYZE_BODY" />
</AnalysisBoundary>
