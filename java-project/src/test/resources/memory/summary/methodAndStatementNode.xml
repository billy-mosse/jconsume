<?xml version="1.0" encoding="UTF-8"?>
<summary className="ar.uba.dc.simple.EjemploSimple01" methodSignature="ar.uba.dc.simple.Tupla test()">
	<heap>
		<graph>
			<nodes>
				<statement id="1" inside="true">
					<statement-id>
						<method id="2">
			            	<class>ar.uba.dc.simple.EjemploSimple01</class>
			            	<signature>ar.uba.dc.simple.Tupla nuevaTupla()</signature>
			            </method>
			            <value>$r0 = new ar.uba.dc.simple.Tupla</value>
			            <line-number>58</line-number>
			            <bytecode-offset>0</bytecode-offset>
					</statement-id>
					<context>
	                    <call>
							<method id="3">
								<class>ar.uba.dc.simple.EjemploSimple01</class>
								<signature>ar.uba.dc.simple.Tupla test()</signature>
							</method>
							<value><![CDATA[$r0 = staticinvoke <ar.uba.dc.simple.EjemploSimple01: ar.uba.dc.simple.Tupla nuevaTupla()>()]]></value>
							<line-number>42</line-number>
							<bytecode-offset>0</bytecode-offset>
	                    </call>
					</context>
				</statement>
				<statement id="4" inside="false">
					<statement-id>
						<method reference="2" />
			            <value>$r0 = new ar.uba.dc.simple.Tupla</value>
			            <line-number>58</line-number>
			            <bytecode-offset>0</bytecode-offset>
					</statement-id>
					<context sensitivity="2">
						<call>
	                    	<method id="3">
								<class>ar.uba.dc.simple.EjemploSimple01</class>
								<signature>ar.uba.dc.simple.Tupla test()</signature>
							</method>
							<value><![CDATA[$r0 = staticinvoke <ar.uba.dc.simple.EjemploSimple01: ar.uba.dc.simple.Tupla nuevaTupla()>()]]></value>
							<line-number>42</line-number>
							<bytecode-offset>0</bytecode-offset>
						</call>
	                    <call>
							<method reference="3"/>
		                    <value><![CDATA[staticinvoke <ar.uba.dc.simple.EjemploSimple01: void cargarTupla(ar.uba.dc.simple.Tupla)>($r0)]]></value>
		                    <line-number>43</line-number>
		                    <bytecode-offset>5</bytecode-offset>
	                    </call>
					</context>
				</statement>
				<method id="5">
					<method-id reference="2" />
					<context sensitivity="2">
						<call>
	                    	<method id="3">
								<class>ar.uba.dc.simple.EjemploSimple01</class>
								<signature>ar.uba.dc.simple.Tupla test()</signature>
							</method>
							<value><![CDATA[$r0 = staticinvoke <ar.uba.dc.simple.EjemploSimple01: ar.uba.dc.simple.Tupla nuevaTupla()>()]]></value>
							<line-number>42</line-number>
							<bytecode-offset>0</bytecode-offset>
						</call>
	                    <call>
							<method reference="3"/>
		                    <value><![CDATA[staticinvoke <ar.uba.dc.simple.EjemploSimple01: void cargarTupla(ar.uba.dc.simple.Tupla)>($r0)]]></value>
		                    <line-number>43</line-number>
		                    <bytecode-offset>5</bytecode-offset>
	                    </call>
					</context>
				</method>
			</nodes>
			<edges />
		</graph>
		<returned>
			<method reference="5" />
			<statement id="1" inside="true">
				<statement-id>
					<method id="2">
		            	<class>ar.uba.dc.simple.EjemploSimple01</class>
		            	<signature>ar.uba.dc.simple.Tupla nuevaTupla()</signature>
		            </method>
		            <value>$r0 = new ar.uba.dc.simple.Tupla</value>
		            <line-number>58</line-number>
		            <bytecode-offset>0</bytecode-offset>
				</statement-id>
				<context>
                    <call>
						<method id="3">
							<class>ar.uba.dc.simple.EjemploSimple01</class>
							<signature>ar.uba.dc.simple.Tupla test()</signature>
						</method>
						<value><![CDATA[$r0 = staticinvoke <ar.uba.dc.simple.EjemploSimple01: ar.uba.dc.simple.Tupla nuevaTupla()>()]]></value>
						<line-number>42</line-number>
						<bytecode-offset>0</bytecode-offset>
                    </call>
				</context>
			</statement>
		</returned>
		<escape-globaly>
			<statement reference="4" />
		</escape-globaly>
	</heap>
	<parameters>
		<parameter>$t.size</parameter>
		<parameter>n</parameter>
	</parameters>
	<temporal><![CDATA[{ [$t.size, n] -> 2*$t.size^2 + 5 *n: n > 0; [$t.size, n] -> 2*$t.size^2: n <= 0 }]]></temporal>
	<residual>
		<node>
			<statement reference="1" />
			<value>{ [n] -> n + 4 }</value>
		</node>
	</residual>
</summary>