<summary id="1" className="ar.uba.dc.tacas.Snippet01" methodSignature="ar.uba.dc.rinard.List test(ar.uba.dc.rinard.List,ar.uba.dc.tacas.Transform)">
  <heap>
    <graph>
      <nodes>
        <param id="2" index="0"/>
        <param id="3" index="1"/>
        <statement id="4" inside="true">
          <statement-id id="5">
            <method id="6">
              <class>ar.uba.dc.tacas.Transform2</class>
              <signature>java.lang.Object apply(java.lang.Object)</signature>
            </method>
            <value>$r10 = newarray (java.lang.Integer)[$b3]</value>
            <line-number>16</line-number>
            <bytecode-offset>30</bytecode-offset>
          </statement-id>
          <context>
            <call id="7">
              <method id="8">
                <class>ar.uba.dc.tacas.Snippet01</class>
                <signature>ar.uba.dc.rinard.List test(ar.uba.dc.rinard.List,ar.uba.dc.tacas.Transform)</signature>
              </method>
              <value>$r1 = staticinvoke &lt;ar.uba.dc.tacas.Snippet01: ar.uba.dc.rinard.List safeMap(ar.uba.dc.rinard.List,ar.uba.dc.tacas.Transform)&gt;($r1, $r2)</value>
              <line-number>166</line-number>
              <bytecode-offset>27</bytecode-offset>
            </call>
            <call id="9">
              <method id="10">
                <class>ar.uba.dc.tacas.Snippet01</class>
                <signature>ar.uba.dc.rinard.List safeMap(ar.uba.dc.rinard.List,ar.uba.dc.tacas.Transform)</signature>
              </method>
              <value>$r0 = staticinvoke &lt;ar.uba.dc.tacas.Snippet01: ar.uba.dc.rinard.List map(ar.uba.dc.rinard.List,ar.uba.dc.tacas.Transform)&gt;($r0, $r1)</value>
              <line-number>145</line-number>
              <bytecode-offset>7</bytecode-offset>
            </call>
            <call id="11">
              <method id="12">
                <class>ar.uba.dc.tacas.Snippet01</class>
                <signature>ar.uba.dc.rinard.List map(ar.uba.dc.rinard.List,ar.uba.dc.tacas.Transform)</signature>
              </method>
              <value>$r6 = virtualinvoke $r3.&lt;ar.uba.dc.tacas.Transform: java.lang.Object apply(java.lang.Object)&gt;($r5)</value>
              <line-number>111</line-number>
              <bytecode-offset>23</bytecode-offset>
            </call>
          </context>
        </statement>
        <statement id="13" inside="true">
          <statement-id id="14">
            <method reference="8"/>
            <value>$r0 = new ar.uba.dc.rinard.List</value>
            <line-number>164</line-number>
            <bytecode-offset>0</bytecode-offset>
          </statement-id>
          <context/>
        </statement>
        <statement id="15" inside="true">
          <statement-id id="16">
            <method id="17">
              <class>ar.uba.dc.rinard.List</class>
              <signature>void add(java.lang.Object)</signature>
            </method>
            <value>$r1 = new ar.uba.dc.rinard.Cell</value>
            <line-number>15</line-number>
            <bytecode-offset>1</bytecode-offset>
          </statement-id>
          <context>
            <call id="18">
              <method reference="8"/>
              <value>virtualinvoke $r0.&lt;ar.uba.dc.rinard.List: void add(java.lang.Object)&gt;($r1)</value>
              <line-number>166</line-number>
              <bytecode-offset>30</bytecode-offset>
            </call>
          </context>
        </statement>
        <statement id="19" inside="false">
          <statement-id id="20">
            <method id="21">
              <class>ar.uba.dc.rinard.ListItr</class>
              <signature>java.lang.Object next()</signature>
            </method>
            <value>$r3 = $r2.&lt;ar.uba.dc.rinard.Cell: java.lang.Object data&gt;</value>
            <line-number>33</line-number>
            <bytecode-offset>4</bytecode-offset>
          </statement-id>
          <context>
            <call id="22">
              <method reference="8"/>
              <value>$r5 = interfaceinvoke $r4.&lt;java.util.Iterator: java.lang.Object next()&gt;()</value>
              <line-number>166</line-number>
              <bytecode-offset>18</bytecode-offset>
            </call>
          </context>
        </statement>
        <statement id="23" inside="true">
          <statement-id id="24">
            <method reference="12"/>
            <value>$r0 = new ar.uba.dc.rinard.List</value>
            <line-number>109</line-number>
            <bytecode-offset>0</bytecode-offset>
          </statement-id>
          <context>
            <call reference="7"/>
            <call reference="9"/>
          </context>
        </statement>
        <statement id="25" inside="false">
          <statement-id id="26">
            <method id="27">
              <class>ar.uba.dc.rinard.List</class>
              <signature>java.util.Iterator iterator()</signature>
            </method>
            <value>$r3 = $r2.&lt;ar.uba.dc.rinard.List: ar.uba.dc.rinard.Cell head&gt;</value>
            <line-number>25</line-number>
            <bytecode-offset>5</bytecode-offset>
          </statement-id>
          <context>
            <call reference="7"/>
            <call id="28">
              <method reference="10"/>
              <value>$r0 = staticinvoke &lt;ar.uba.dc.tacas.Snippet01: ar.uba.dc.rinard.List copyList(ar.uba.dc.rinard.List)&gt;($r0)</value>
              <line-number>144</line-number>
              <bytecode-offset>1</bytecode-offset>
            </call>
            <call id="29">
              <method id="30">
                <class>ar.uba.dc.tacas.Snippet01</class>
                <signature>ar.uba.dc.rinard.List copyList(ar.uba.dc.rinard.List)</signature>
              </method>
              <value>$r2 = virtualinvoke $r0.&lt;ar.uba.dc.rinard.List: java.util.Iterator iterator()&gt;()</value>
              <line-number>124</line-number>
              <bytecode-offset>9</bytecode-offset>
            </call>
          </context>
        </statement>
        <statement id="31" inside="true">
          <statement-id id="32">
            <method reference="6"/>
            <value>$r3 = new java.lang.Integer</value>
            <line-number>17</line-number>
            <bytecode-offset>35</bytecode-offset>
          </statement-id>
          <context>
            <call reference="7"/>
            <call reference="9"/>
            <call reference="11"/>
          </context>
        </statement>
        <statement id="33" inside="false">
          <statement-id id="34">
            <method reference="21"/>
            <value>$r4 = $r4.&lt;ar.uba.dc.rinard.Cell: ar.uba.dc.rinard.Cell next&gt;</value>
            <line-number>34</line-number>
            <bytecode-offset>13</bytecode-offset>
          </statement-id>
          <context>
            <call reference="22"/>
          </context>
        </statement>
        <statement id="35" inside="false">
          <statement-id reference="34"/>
          <context>
            <call reference="7"/>
            <call reference="28"/>
            <call id="36">
              <method reference="30"/>
              <value>$r4 = interfaceinvoke $r3.&lt;java.util.Iterator: java.lang.Object next()&gt;()</value>
              <line-number>125</line-number>
              <bytecode-offset>18</bytecode-offset>
            </call>
          </context>
        </statement>
        <statement id="37" inside="true">
          <statement-id id="38">
            <method id="39">
              <class>ar.uba.dc.tacas.Transform</class>
              <signature>java.lang.Object apply(java.lang.Object)</signature>
            </method>
            <value>$r6 = new java.lang.Integer</value>
            <line-number>25</line-number>
            <bytecode-offset>29</bytecode-offset>
          </statement-id>
          <context>
            <call reference="7"/>
            <call reference="9"/>
            <call id="40">
              <method reference="12"/>
              <value>$r6 = virtualinvoke $r3.&lt;ar.uba.dc.tacas.Transform: java.lang.Object apply(java.lang.Object)&gt;($r5)</value>
              <line-number>111</line-number>
              <bytecode-offset>23</bytecode-offset>
            </call>
          </context>
        </statement>
        <statement id="41" inside="true">
          <statement-id reference="16"/>
          <context>
            <call reference="7"/>
            <call reference="9"/>
            <call id="42">
              <method reference="12"/>
              <value>virtualinvoke $r0.&lt;ar.uba.dc.rinard.List: void add(java.lang.Object)&gt;($r5)</value>
              <line-number>112</line-number>
              <bytecode-offset>31</bytecode-offset>
            </call>
          </context>
        </statement>
        <statement id="43" inside="false">
          <statement-id reference="20"/>
          <context>
            <call reference="7"/>
            <call reference="28"/>
            <call reference="36"/>
          </context>
        </statement>
        <statement id="44" inside="true">
          <statement-id id="45">
            <method reference="6"/>
            <value>$r3 = new java.lang.Integer</value>
            <line-number>18</line-number>
            <bytecode-offset>47</bytecode-offset>
          </statement-id>
          <context>
            <call reference="7"/>
            <call reference="9"/>
            <call reference="11"/>
          </context>
        </statement>
        <statement id="46" inside="false">
          <statement-id reference="26"/>
          <context>
            <call id="47">
              <method reference="8"/>
              <value>$r3 = virtualinvoke $r0.&lt;ar.uba.dc.rinard.List: java.util.Iterator iterator()&gt;()</value>
              <line-number>165</line-number>
              <bytecode-offset>9</bytecode-offset>
            </call>
          </context>
        </statement>
      </nodes>
      <edges>
        <edge id="48" field="head" inside="false">
          <source>
            <param reference="2"/>
          </source>
          <target>
            <statement reference="46"/>
          </target>
        </edge>
        <edge id="49" field="next" inside="false">
          <source>
            <statement reference="33"/>
          </source>
          <target>
            <statement reference="33"/>
          </target>
        </edge>
        <edge id="50" field="data" inside="false">
          <source>
            <statement reference="33"/>
          </source>
          <target>
            <statement reference="19"/>
          </target>
        </edge>
        <edge id="51" field="[]" inside="true">
          <source>
            <statement reference="4"/>
          </source>
          <target>
            <statement reference="44"/>
          </target>
        </edge>
        <edge id="52" field="[]" inside="true">
          <source>
            <statement reference="4"/>
          </source>
          <target>
            <statement reference="31"/>
          </target>
        </edge>
        <edge id="53" field="head" inside="true">
          <source>
            <statement reference="13"/>
          </source>
          <target>
            <statement reference="15"/>
          </target>
        </edge>
        <edge id="54" field="next" inside="false">
          <source>
            <statement reference="35"/>
          </source>
          <target>
            <statement reference="35"/>
          </target>
        </edge>
        <edge id="55" field="data" inside="false">
          <source>
            <statement reference="35"/>
          </source>
          <target>
            <statement reference="43"/>
          </target>
        </edge>
        <edge id="56" field="next" inside="true">
          <source>
            <statement reference="15"/>
          </source>
          <target>
            <statement reference="15"/>
          </target>
        </edge>
        <edge id="57" field="data" inside="true">
          <source>
            <statement reference="15"/>
          </source>
          <target>
            <statement reference="23"/>
          </target>
        </edge>
        <edge id="58" field="data" inside="true">
          <source>
            <statement reference="41"/>
          </source>
          <target>
            <statement reference="4"/>
          </target>
        </edge>
        <edge id="59" field="next" inside="true">
          <source>
            <statement reference="41"/>
          </source>
          <target>
            <statement reference="41"/>
          </target>
        </edge>
        <edge id="60" field="data" inside="true">
          <source>
            <statement reference="41"/>
          </source>
          <target>
            <statement reference="37"/>
          </target>
        </edge>
        <edge id="61" field="head" inside="false">
          <source>
            <statement reference="19"/>
          </source>
          <target>
            <statement reference="25"/>
          </target>
        </edge>
        <edge id="62" field="head" inside="true">
          <source>
            <statement reference="23"/>
          </source>
          <target>
            <statement reference="41"/>
          </target>
        </edge>
        <edge id="63" field="next" inside="false">
          <source>
            <statement reference="46"/>
          </source>
          <target>
            <statement reference="33"/>
          </target>
        </edge>
        <edge id="64" field="data" inside="false">
          <source>
            <statement reference="46"/>
          </source>
          <target>
            <statement reference="19"/>
          </target>
        </edge>
        <edge id="65" field="next" inside="false">
          <source>
            <statement reference="25"/>
          </source>
          <target>
            <statement reference="35"/>
          </target>
        </edge>
        <edge id="66" field="data" inside="false">
          <source>
            <statement reference="25"/>
          </source>
          <target>
            <statement reference="43"/>
          </target>
        </edge>
      </edges>
    </graph>
    <returned>
      <statement reference="13"/>
    </returned>
    <escape-globaly/>
  </heap>
  <parameters>
    <parameter>list.elements.maxSize</parameter>
    <parameter>list.size</parameter>
  </parameters>
  <temporal>{ [[list.elements.maxSize,list.size] -&gt; []] -&gt; 5 + list.elements.maxSize : list.elements.maxSize &gt;= 1 &amp;&amp; list.size &gt;= 1 }</temporal>
  <residual>
    <node>
      <param reference="2"/>
      <value>{ [[list.elements.maxSize,list.size] -&gt; []] -&gt; 0 : list.size &gt; 0 and list.elements.maxSize &gt; 0 }</value>
    </node>
    <node>
      <param reference="3"/>
      <value>{ [[list.elements.maxSize,list.size] -&gt; []] -&gt; 0 : list.size &gt; 0 and list.elements.maxSize &gt; 0 }</value>
    </node>
    <node>
      <statement reference="4"/>
      <value>{ [[list.elements.maxSize,list.size] -&gt; []] -&gt; 2*list.elements.maxSize*list.size : list.elements.maxSize &gt;= 1 &amp;&amp; list.size &gt;= 1 }</value>
    </node>
    <node>
      <statement reference="13"/>
      <value>{ [[list.elements.maxSize,list.size] -&gt; []] -&gt; 1 : list.elements.maxSize &gt;= 1 &amp;&amp; list.size &gt;= 1 }</value>
    </node>
    <node>
      <statement reference="15"/>
      <value>{ [[list.elements.maxSize,list.size] -&gt; []] -&gt; list.size : list.elements.maxSize &gt;= 1 &amp;&amp; list.size &gt;= 1 }</value>
    </node>
    <node>
      <statement reference="19"/>
      <value>{ [[list.elements.maxSize,list.size] -&gt; []] -&gt; 0 : list.size &gt; 0 and list.elements.maxSize &gt; 0 }</value>
    </node>
    <node>
      <statement reference="23"/>
      <value>{ [[list.elements.maxSize,list.size] -&gt; []] -&gt; list.size : list.elements.maxSize &gt;= 1 &amp;&amp; list.size &gt;= 1 }</value>
    </node>
    <node>
      <statement reference="25"/>
      <value>{ [[list.elements.maxSize,list.size] -&gt; []] -&gt; 0 : list.size &gt; 0 and list.elements.maxSize &gt; 0 }</value>
    </node>
    <node>
      <statement reference="31"/>
      <value>{ [[list.elements.maxSize,list.size] -&gt; []] -&gt; list.elements.maxSize*list.size : list.elements.maxSize &gt;= 1 &amp;&amp; list.size &gt;= 1 }</value>
    </node>
    <node>
      <statement reference="33"/>
      <value>{ [[list.elements.maxSize,list.size] -&gt; []] -&gt; 0 : list.size &gt; 0 and list.elements.maxSize &gt; 0 }</value>
    </node>
    <node>
      <statement reference="35"/>
      <value>{ [[list.elements.maxSize,list.size] -&gt; []] -&gt; 0 : list.size &gt; 0 and list.elements.maxSize &gt; 0 }</value>
    </node>
    <node>
      <statement reference="37"/>
      <value>{ [[list.elements.maxSize,list.size] -&gt; []] -&gt; list.elements.maxSize*list.size : list.elements.maxSize &gt;= 1 &amp;&amp; list.size &gt;= 1 }</value>
    </node>
    <node>
      <statement reference="41"/>
      <value>{ [[list.elements.maxSize,list.size] -&gt; []] -&gt; list.elements.maxSize*list.size : list.elements.maxSize &gt;= 1 &amp;&amp; list.size &gt;= 1 }</value>
    </node>
    <node>
      <statement reference="43"/>
      <value>{ [[list.elements.maxSize,list.size] -&gt; []] -&gt; 0 : list.size &gt; 0 and list.elements.maxSize &gt; 0 }</value>
    </node>
    <node>
      <statement reference="44"/>
      <value>{ [[list.elements.maxSize,list.size] -&gt; []] -&gt; list.elements.maxSize*list.size : list.elements.maxSize &gt;= 1 &amp;&amp; list.size &gt;= 1 }</value>
    </node>
    <node>
      <statement reference="46"/>
      <value>{ [[list.elements.maxSize,list.size] -&gt; []] -&gt; 0 : list.size &gt; 0 and list.elements.maxSize &gt; 0 }</value>
    </node>
  </residual>
</summary>